name: Python CI

# Run the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip==23.1.2  # Pin pip version for stability
          pip install -r requirements.txt || exit 1
          pip install -r requirements.dev.txt || exit 1

      # Install linting and formatting tools
      - name: Install linting and formatting tools
        run: |
          pip install ruff pyright black

      # Run code formatting, linting, and type checking
      - name: Run code formatters and linters
        run: |
          echo "Running black for code formatting..."
          black --check .
          echo "Running ruff for linting..."
          ruff check .
          echo "Running pyright for type checking..."
          pyright .
        continue-on-error: true  # Allow the pipeline to proceed even if linters fail

      # Run the test suite
      - name: Run unit tests
        run: ./scripts/run_tests.sh

      # Publish test results (JUnit format)
      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/test-*.xml'

      # Upload coverage results
      - name: Publish code coverage results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-results
          path: '**/coverage.xml'
